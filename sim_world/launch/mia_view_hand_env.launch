<?xml version="1.0"?>
<launch>
    <!-- Params to set for visualisation  -->
    <arg name="Rviz_on" default="true" doc="If true, start Rviz and the joint state gui" />
    <arg name="use_joint_gui" default="true" doc="Should the joint_state_publisher use a GUI for controlling joint states" />

    <!-- Params to set right or left Mia hand version  -->
    <arg name="right_hand" default="true" doc="True to for right hand False otherwise" />
    <arg name="wrist_rotation" default="true" doc="True to add wrist rotation to the hand" />
    <arg name="load_default_mia_model" default="false" />
    <arg name="joint_limits_config_filename" default="joint_limits.yaml" doc="name of the config yaml file to calibrate joints limit of URDF file" />
    <arg name="transmission_config_filename" default="transmission_config.yaml" doc="name of the config yaml file to calibrate transmissions of MiaHand" />
    <arg name="wrist_transmission_config_filename" default="transmission_config_wrist.yaml" doc="name of the config yaml file to calibrate transmissions of MiaHand" />

    <!-- Params to set true if you want to rempa the thumb opp joint position  -->
    <arg name="remap_MIA_th_opp" default='false' doc="True to remap the thumb opp joint position following the indef fle position" />

    <!-- Arguments to upload hardware interfaces of each finger -->
    <arg name="hw_interface_thumb_fle"      default="EffortJointInterface"/>
    <arg name="hw_interface_index_fle"      default="EffortJointInterface"/>
    <arg name="hw_interface_mrl_fle"        default="EffortJointInterface"/>
    <!-- Wrist -->
    <arg name="hw_interface_wrist_rotation" default="EffortJointInterface"/>
    <arg name="hw_interface_wrist_exfle"    default="EffortJointInterface"/>
    <arg name="hw_interface_wrist_ulra"     default="EffortJointInterface"/>

    <arg name="robotNamespace"              default="mia_hand_camera"/> <!-- /mia_hand_camera -->

    <!-- Load urdf as robot description -->
    <group>
        <param name="robot_description" command="$(find xacro)/xacro '$(find sim_world)/urdf/hands/mia_hand_camera_launch.urdf.xacro'
          right_hand:=$(arg right_hand)
          default_mia_model:=$(arg load_default_mia_model)
          hw_interface_thumb_fle:=$(arg hw_interface_thumb_fle)
          hw_interface_index_fle:=$(arg hw_interface_index_fle)
          hw_interface_mrl_fle:=$(arg hw_interface_mrl_fle)
          hw_interface_wrist_rotation:=$(arg hw_interface_wrist_rotation)
          hw_interface_wrist_exfle:=$(arg hw_interface_wrist_exfle)
          hw_interface_wrist_ulra:=$(arg hw_interface_wrist_ulra)
          robotNamespace:=$(arg robotNamespace)
          joint_limits_config_filename:=$(arg joint_limits_config_filename)
          wrist_rotation:=$(arg wrist_rotation)" />
    </group>

    <!-- Load thumb opp transmission config file-->
    <group ns = "$(arg robotNamespace)">
        <param name="mia_transmissions_config_" type="string" value="$(find mia_hand_description)/calibration/$(arg transmission_config_filename)" />
        <param name="mia_wrist_transmissions_config_" type="string" value="$(find sim_world)/urdf/calibration/$(arg wrist_transmission_config_filename)" />
    </group>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" ns= "$(arg robotNamespace)">
        <remap from="joint_states" to="miaviz_joint_states" />
    </node>

    <!-- Group of nodes to launch if Rviz_on is true -->
    <group if="$(arg Rviz_on)">

        <!-- Join_state_gui/ publisher -->
        <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"  output="screen" if="$(arg use_joint_gui)">
            <remap from="joint_states" to="$(arg robotNamespace)/joint_states" />
        </node>

        <node name="remap_mia_joint_states" pkg="mia_hand_description" type="remap_mia_joint_states" ns= "$(arg robotNamespace)">
            <param name="remap_MIA_th_opp" type="bool" value="$(arg remap_MIA_th_opp)"/> <!-- private param so as to match to the namespace used-->
        </node>

        <!-- Run rviz -->
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sim_world)/rviz/env.rviz" />

    </group>
</launch>
